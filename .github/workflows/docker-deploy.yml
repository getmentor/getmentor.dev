name: Docker Build and Deploy to DigitalOcean

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: registry.digitalocean.com
  REGISTRY_NAME: getmentor
  IMAGE_NAME: getmentor-dev

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 1200

      - name: Build Docker image
        run: |
          docker build \
            --build-arg AIRTABLE_API_KEY="${{ secrets.AIRTABLE_API_KEY }}" \
            --build-arg AIRTABLE_BASE_ID="${{ secrets.AIRTABLE_BASE_ID }}" \
            --build-arg NEXT_PUBLIC_RECAPTCHA_V2_SITE_KEY="${{ secrets.NEXT_PUBLIC_RECAPTCHA_V2_SITE_KEY }}" \
            --build-arg RECAPTCHA_V2_SECRET_KEY="${{ secrets.RECAPTCHA_V2_SECRET_KEY }}" \
            --build-arg MENTORS_API_LIST_AUTH_TOKEN="${{ secrets.MENTORS_API_LIST_AUTH_TOKEN }}" \
            --build-arg MENTORS_API_LIST_AUTH_TOKEN_INNO="${{ secrets.MENTORS_API_LIST_AUTH_TOKEN_INNO }}" \
            --build-arg MENTORS_API_LIST_AUTH_TOKEN_AIKB="${{ secrets.MENTORS_API_LIST_AUTH_TOKEN_AIKB }}" \
            --build-arg REVALIDATE_SECRET_TOKEN="${{ secrets.REVALIDATE_SECRET_TOKEN }}" \
            --build-arg AZURE_STORAGE_DOMAIN="${{ secrets.AZURE_STORAGE_DOMAIN }}" \
            --build-arg NEXT_PUBLIC_AZURE_STORAGE_DOMAIN="${{ secrets.NEXT_PUBLIC_AZURE_STORAGE_DOMAIN }}" \
            --build-arg INTERTNAL_MENTORS_API="${{ secrets.INTERTNAL_MENTORS_API }}" \
            -t ${{ env.REGISTRY }}/${{ env.REGISTRY_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            -t ${{ env.REGISTRY }}/${{ env.REGISTRY_NAME }}/${{ env.IMAGE_NAME }}:latest \
            -f Dockerfile \
            .

      - name: Push image to DigitalOcean Container Registry
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.REGISTRY_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.REGISTRY }}/${{ env.REGISTRY_NAME }}/${{ env.IMAGE_NAME }}:latest

      # - name: Update DigitalOcean App Platform deployment
      #   run: |
      #     # Trigger a new deployment on App Platform
      #     # This will pull the latest image from the registry
      #     doctl apps create-deployment ${{ secrets.DIGITALOCEAN_APP_ID }} --wait

      - name: Deployment summary
        run: |
          echo "âœ… Docker image built and pushed successfully!"
          echo "Image: ${{ env.REGISTRY }}/${{ env.REGISTRY_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          echo "App Platform deployment triggered for app ID: ${{ secrets.DIGITALOCEAN_APP_ID }}"
